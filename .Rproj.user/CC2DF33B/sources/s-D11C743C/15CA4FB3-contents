

# old code, need to rewrite
### linear

# first, get dsmle result
r_dsmle_linear = krr(y=mY, X= mX, kernel.type = "linear", lambda =1000)


# our result
r_ours_linear = kernel_ridge(mX_scaled, mY, lambda=1000)

# observe here that the two kernels are the same!
mXXt_dsmle = r_dsmle_linear$K
mXXt_dsmle
mXXt_ours =r_ours_linear$K
mXXt_ours

# create df to compare predictions
df_compare = data.frame(our_pred = r_ours_linear$yhat,
                        dsmle_pred = r_dsmle_linear$yhat,
                        actual = Airline$output,
                        index = 1:length(r_ours_linear$yhat))

df_compare = melt(df_compare, id.vars = "index")

# show in plot
ggplot(data = df_compare, aes(x = index, y = value, col = variable)) + 
  geom_line()



### RBF

help(krr)

# first, get dsmle result
r_dsmle_rbf = krr(y=mY, X= mX, kernel.type = "RBF", kernel.RBF.sigma = ncol(mX)/2, lambda = 1000)

# but our sse is much lower...different predicted values, most likely due to different beta's
r_ours_rbf = kernel_ridge(mX_scaled, mY, lambda=1000, type_kernel = "RBF", gamma = 1/ncol(mX))

# The two kernels are different! maybe due to difference in sigma/gamma
mXXt_dsmle_rbf = r_dsmle_rbf$K
mXXt_ours_rbf = r_ours_rbf$K


# create df to compare predictions
df_compare_rbf = data.frame(our_pred = r_ours_rbf$yhat,
                            dsmle_pred = r_dsmle_rbf$yhat,
                            actual = Airline$output,
                            index = 1:length(r_ours_rbf$yhat))

df_compare_rbf = melt(df_compare_rbf, id.vars = "index")

# show in plot
ggplot(data = df_compare_rbf, aes(x = index, y = value, col = variable)) + 
  geom_line()


### non-homogeneous polynomial


# first, get dsmle result
r_dsmle_nonhomopolynom = krr(y=mY, X= mX, kernel.type = "nonhompolynom", kernel.degree =2, lambda = 1/1000)

# but our sse is much lower...different predicted values, most likely due to different beta's
r_ours_nonhomopolynom = kernel_ridge(mX_scaled, mY, lambda=1000, type_kernel = "nonhompolynom", degree = 2)

# The two kernels are different! maybe due to difference in sigma/gamma
mXXt_dsmle_nonhomopolynom= r_dsmle_nonhomopolynom$K
mXXt_ours_nonhomopolynom = r_ours_nonhomopolynom$K

# create df to compare predictions
df_compare_nonhomopolynom = data.frame(our_pred = r_ours_nonhomopolynom$yhat,
                                       dsmle_pred = r_dsmle_nonhomopolynom$yhat,
                                       actual = Airline$output,
                                       index = 1:length(r_ours_rbf$yhat))

df_compare_nonhomopolynom = melt(df_compare_nonhomopolynom, id.vars = "index")

# show in plot
ggplot(data = df_compare_nonhomopolynom, aes(x = index, y = value, col = variable)) + 
  geom_line()


# loss function for kernel ridge regression
loss_krr = function(q_hat, mXXt, mY, mBeta_zero, lambda, J){
  
  # define the SSE for the intercept and the other beta's
  SSE_intercept = sum(abs(mY - mBeta_zero[[1]])^2)
  SSE_independent = sum(abs((J %*% mY) - q_hat ))
  
  # penalty term
  penalty = lambda * (t(q_hat) %*% inv(mXXt) %*% q_hat)
  
  # combine, return loss
  loss = SSE_intercept + SSE_independent + penalty 
  return(loss)
  
}



