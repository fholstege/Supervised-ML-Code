"0","# set seed to ensure stability of results
set.seed(0)

# set e small
e <- 0.00000001

# set for number of beta's
nBeta <- ncol(mXairIntercept)

# calculate the model using the MM algorithm
modelMM <- calcModelMM(mXairIntercept, mYair, e, nBeta)
"
"1","[1]"
"1"," ""Before setting 0"""
"1","
"
"1","[1]"
"1"," 54.8544912"
"1"," -6.6739483"
"1","  4.5765043"
"1","  3.4007514"
"1"," -0.2130462"
"1"," -0.1401852"
"1","
"
"1","[1]"
"1"," ""After"""
"1","
"
"1","[1]"
"1"," 54.8544912"
"1"," -6.6739483"
"1","  4.5765043"
"1","  3.4007514"
"1"," -0.2130462"
"1"," -0.1401852"
"1","
"
"1","[1]"
"1"," ""Before setting 0"""
"1","
"
"1","[1]"
"1"," 80.7645887"
"1","  6.3849900"
"1"," -5.5908981"
"1","  1.6659112"
"1","  1.0871100"
"1"," -0.1395286"
"1","
"
"1","[1]"
"1"," ""After"""
"1","
"
"1","[1]"
"1"," 80.7645887"
"1","  6.3849900"
"1"," -5.5908981"
"1","  1.6659112"
"1","  1.0871100"
"1"," -0.1395286"
"1","
"
"1","[1]"
"1"," ""Before setting 0"""
"1","
"
"1","[1]"
"1"," 93.2064085"
"1","  7.3081720"
"1"," -5.5777046"
"1"," -2.8396608"
"1"," -0.4800769"
"1","  0.1248380"
"1","
"
"1","[1]"
"1"," ""After"""
"1","
"
"1","[1]"
"1"," 93.2064085"
"1","  7.3081720"
"1"," -5.5777046"
"1"," -2.8396608"
"1"," -0.4800769"
"1","  0.1248380"
"1","
"
"1","[1]"
"1"," ""Before setting 0"""
"1","
"
"1","[1]"
"1"," 99.1808701"
"1"," -7.8436543"
"1","  7.7976534"
"1"," -2.3262937"
"1"," -1.3472162"
"1","  0.3815893"
"1","
"
"1","[1]"
"1"," ""After"""
"1","
"
"1","[1]"
"1"," 99.1808701"
"1"," -7.8436543"
"1","  7.7976534"
"1"," -2.3262937"
"1"," -1.3472162"
"1","  0.3815893"
"1","
"
"0","# calc the model using the standard R library"
"0","modelTest <- lm(airq ~ XairScaled,dfAirQ)"
"0",""
"0","# set notation of numbers"
"0","options(scipen = 12)"
"0",""
"0",""
"0","# Compare the sum of squared errors"
"0","ResiMM <- modelMM$RSS"
"0","ResiTest <- sum(resid(modelTest)^2)"
"0","dfResi <- dfCompare(ResiMM, ResiTest, c(""RSS with MM"", ""RS with lm()""))"
"0","dfResi"
