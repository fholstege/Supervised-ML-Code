sample_df %>% select(-drop_cols)
t <- sample_df %>% select(-drop_cols)
drop_cols <- c("acctstdq",
"add1",
"add2",
"add3",
"add4",
"zip",
"cik",
"city",
"compstq",
"conm",
"conml",
"county",
"curcdq",
"datacqtr",
"datafqtr",
"ein",
"exchg",
"fax",
"fdateq",
"fic",
"ggroup",
"gind",
"naics",
"incorp",
"isin",
"pdateq",
"phone",
"prican",
"prirow",
"priusa",
"rp",
"sedol",
"sic",
"staltq",
"state",
"weburl")
sample_df_dropped <- sample_df %>% select(-drop_cols)
sample_df_dropped <- sample_df %>% select(-drop_cols)
drop_cols <- c("acctstdq",
"add1",
"add2",
"add3",
"add4",
"addzip",
"cik",
"city",
"compstq",
"conm",
"conml",
"county",
"curcdq",
"datacqtr",
"datafqtr",
"ein",
"exchg",
"fax",
"fdateq",
"fic",
"ggroup",
"gind",
"naics",
"incorp",
"isin",
"pdateq",
"phone",
"prican",
"prirow",
"priusa",
"rp",
"sedol",
"sic",
"staltq",
"state",
"weburl")
sample_df_dropped <- sample_df %>% select(-drop_cols)
drop_cols <- c("acctstdq",
"add1",
"add2",
"add3",
"add4",
"addzip",
"cik",
"city",
"compstq",
"conm",
"conml",
"county",
"curcdq",
"datacqtr",
"datafqtr",
"ein",
"exchg",
"fax",
"fdateq",
"fic",
"ggroup",
"gind",
"naics",
"incorp",
"isin",
"pdateq",
"phone",
"prican",
"prirow",
"priusa",
"rp",
"sedol",
"sic",
"staltq",
"state",
"weburl",
"caprq2",
"caprq3")
mY <- sample_df_dropped$capr1q
drop_cols <- c("acctstdq",
"add1",
"add2",
"add3",
"add4",
"addzip",
"cik",
"city",
"compstq",
"conm",
"conml",
"county",
"curcdq",
"datacqtr",
"datafqtr",
"ein",
"exchg",
"fax",
"fdateq",
"fic",
"ggroup",
"gind",
"naics",
"incorp",
"isin",
"pdateq",
"phone",
"prican",
"prirow",
"priusa",
"rp",
"sedol",
"sic",
"staltq",
"state",
"weburl",
"caprq2",
"caprq3")
sample_df_dropped <- sample_df %>% select(-drop_cols)
drop_cols <- c("acctstdq",
"add1",
"add2",
"add3",
"add4",
"addzip",
"cik",
"city",
"compstq",
"conm",
"conml",
"county",
"curcdq",
"datacqtr",
"datafqtr",
"ein",
"exchg",
"fax",
"fdateq",
"fic",
"ggroup",
"gind",
"naics",
"incorp",
"isin",
"pdateq",
"phone",
"prican",
"prirow",
"priusa",
"rp",
"sedol",
"sic",
"staltq",
"state",
"weburl",
"capr2q",
"capr3q")
sample_df_dropped <- sample_df %>% select(-drop_cols)
mY <- sample_df_dropped$capr1q
mX <- sample_df_dropped %>% select(-capr1q)
typeof(mX)
dfY <- sample_df_dropped$capr1q
dfX <- sample_df_dropped %>% select(-capr1q)
dfX$gsubind
pacman::p_load(dplyr,
fastdummies)
pacman::p_load(dplyr,
fastDummies)
dummY_columns(dfX$gsubind)
dummy_columns(dfX$gsubind)
colnames(dummy_banktype) <- c("Diversified banks", "Regional banks")
dummy_banktype <- dummy_columns(dfX$gsubind)
colnames(dummy_banktype) <- c("Diversified banks", "Regional banks")
dfX$ipodate
dfX$loq
dfX$loc
pacman::p_load(dplyr,
fastDummies,
countrycode)
countrycode()
code_list
codelist
codelist$iso3c
dfX$loc
dfX$loc %in% codelist$iso3c
dfISO_continent <- data.frame(codelist$continent, codelist$iso3c)
codelist$continent
dfISO_continent_EUR <- data.frame(con = codelist$continent, iso3c = codelist$iso3c) %>%
filter(continent == "Europe")
dfISO_continent_EUR <- data.frame(con = codelist$continent, iso3c = codelist$iso3c) %>%
filter(con == "Europe")
# dataframe of only country codes in euruope
dfISO_continent_EUR <- data.frame(con = codelist$continent, iso3c = codelist$iso3c) %>%
filter(con == "Europe")
df_EUR <- df %>%
filter(loc %in% dfISO_continent_EUR$iso3c)
# pick small sample to check out the data
sample_df <- df_EUR[sample_id,]
# get sample to work off (for now)
sample_id <- sample(21000, 1000)
# pick small sample to check out the data
sample_df <- df_EUR[sample_id,]
drop_cols <- c("acctstdq",
"add1",
"add2",
"add3",
"add4",
"addzip",
"cik",
"city",
"compstq",
"conm",
"conml",
"county",
"curcdq",
"datacqtr",
"datafqtr",
"ein",
"exchg",
"fax",
"fdateq",
"fic",
"ggroup",
"gind",
"naics",
"incorp",
"isin",
"pdateq",
"phone",
"prican",
"prirow",
"priusa",
"rp",
"sedol",
"sic",
"staltq",
"state",
"weburl",
"capr2q",
"capr3q")
sample_df_dropped <- sample_df %>% select(-drop_cols)
dfY <- sample_df_dropped$capr1q
dfX <- sample_df_dropped %>% select(-capr1q)
dummy_banktype <- dummy_columns(dfX$gsubind)
colnames(dummy_banktype) <- c("Diversified banks", "Regional banks")
dummy_loc <- dummy_columns(dfX$loc)
dummy_loc
dfX$spcsrc
drop_cols <- c("acctstdq",
"add1",
"add2",
"add3",
"add4",
"addzip",
"cik",
"city",
"compstq",
"conm",
"conml",
"county",
"curcdq",
"datacqtr",
"datafqtr",
"ein",
"exchg",
"fax",
"fdateq",
"fic",
"ggroup",
"gind",
"naics",
"incorp",
"isin",
"pdateq",
"phone",
"prican",
"prirow",
"priusa",
"rp",
"sedol",
"sic",
"staltq",
"state",
"weburl",
"capr2q",
"capr3q",
"spcsrc")
# sample without dropped variables
sample_df_dropped <- sample_df %>% select(-drop_cols)
# dependent and independent
dfY <- sample_df_dropped$capr1q
dfX <- sample_df_dropped %>% select(-capr1q)
# create banktype variable
dummy_banktype <- dummy_columns(dfX$gsubind)
colnames(dummy_banktype) <- c("Diversified banks", "Regional banks")
# create dummy for location
dummy_loc <- dummy_columns(dfX$loc)
drop_cols <- c("acctstdq",
"add1",
"add2",
"add3",
"add4",
"addzip",
"cik",
"city",
"compstq",
"conm",
"conml",
"county",
"curcdq",
"datacqtr",
"datafqtr",
"ein",
"exchg",
"fax",
"fdateq",
"fic",
"ggroup",
"gind",
"naics",
"incorp",
"isin",
"pdateq",
"phone",
"prican",
"prirow",
"priusa",
"rp",
"sedol",
"sic",
"staltq",
"state",
"weburl",
"capr2q",
"capr3q",
"spcsrc",
"ipodate")
# sample without dropped variables
sample_df_dropped <- sample_df %>% select(-drop_cols)
# dependent and independent
dfY <- sample_df_dropped$capr1q
dfX <- sample_df_dropped %>% select(-capr1q)
# create banktype variable
dummy_banktype <- dummy_columns(dfX$gsubind)
colnames(dummy_banktype) <- c("Diversified banks", "Regional banks")
# create dummy for location
dummy_loc <- dummy_columns(dfX$loc)
summary(dfX)
lapply(dfX, is.numeric)
dfX$ditq
# remove columns with only na's
dfX[, colSums(is.na(dfX)) != nrow(dfX)]
drop_cols <- c("acctstdq",
"add1",
"add2",
"add3",
"add4",
"addzip",
"cik",
"city",
"compstq",
"conm",
"conml",
"county",
"curcdq",
"datacqtr",
"datafqtr",
"ein",
"exchg",
"fax",
"fdateq",
"fic",
"ggroup",
"gind",
"naics",
"incorp",
"isin",
"pdateq",
"phone",
"prican",
"prirow",
"priusa",
"rp",
"sedol",
"sic",
"staltq",
"state",
"weburl",
"capr2q",
"capr3q",
"spcsrc",
"ipodate",
"busdesc")
# remove columns with only na's
dfX[, colSums(is.na(dfX)) != nrow(dfX)]
drop_cols <- c("acctstdq",
"add1",
"add2",
"add3",
"add4",
"addzip",
"cik",
"city",
"compstq",
"conm",
"conml",
"county",
"curcdq",
"datacqtr",
"datafqtr",
"ein",
"exchg",
"fax",
"fdateq",
"fic",
"ggroup",
"gind",
"naics",
"incorp",
"isin",
"pdateq",
"phone",
"prican",
"prirow",
"priusa",
"rp",
"sedol",
"sic",
"staltq",
"state",
"weburl",
"capr2q",
"capr3q",
"spcsrc",
"ipodate",
"busdesc")
# sample without dropped variables
sample_df_dropped <- sample_df %>% select(-drop_cols)
# dependent and independent
dfY <- sample_df_dropped$capr1q
dfX <- sample_df_dropped %>% select(-capr1q)
# create banktype variable
dummy_banktype <- dummy_columns(dfX$gsubind)
colnames(dummy_banktype) <- c("Diversified banks", "Regional banks")
# create dummy for location
dummy_loc <- dummy_columns(dfX$loc)
# remove columns with only na's
dfX[, colSums(is.na(dfX)) != nrow(dfX)]
# remove columns with only na's
dfX_naRemoved <- dfX[, colSums(is.na(dfX)) != nrow(dfX)]
View(dfX_naRemoved)
colSums(dfX)
colSums(is.na(dfX))
colSums(is.na(dfX))/nrow(dfX)
# remove columns with only na's
dfX_naRemoved <- dfX[, colSums(is.na(dfX))/nrow(dfX) > 0.9]
colSums(is.na(dfX_naRemoved))/nrow(dfX_naRemoved)
# remove columns with only na's
dfX_naRemoved <- dfX[, colSums(is.na(dfX))/nrow(dfX) < 0.9]
colSums(is.na(dfX_naRemoved))/nrow(dfX_naRemoved)
View(dfX_naRemoved)
t <- na.omit(dfX_naRemoved)
# remove columns with only na's
dfX_naRemoved <- dfX[, colSums(is.na(dfX))/nrow(dfX) < 0.5]
dfX_naRemoved
View(dfX_naRemoved)
# remove columns with only na's
dfX_naRemoved <- dfX[, colSums(is.na(dfX))/nrow(dfX) < 0.5]
colSums(is.na(dfX_naRemoved))/nrow(dfX_naRemoved)
# remove columns with only na's
dfX_naRemoved <- dfX[, colSums(is.na(dfX))/nrow(dfX) < 0.1]
colSums(is.na(dfX_naRemoved))/nrow(dfX_naRemoved)
View(dfX_naRemoved)
View(df_EUR)
# load data
df <- read.csv("Compustat_BankData.csv")
